The output will be JSON. I'm updating the plugins now. Then we will further process the JSON output files to fit your needs.

I haven't finalized the tags (Title, Name, Value1, etc.) yet.

autoreg-parse.py -p services -sys SYSTEM

[
    {
        "Title": "Services", 
        "Name": "Abiosdsk", 
        "Value1": 4, 
        "Value2": "???", 
        "Value3": "???", 
        "Value4": 1, 
        "Value5": "???", 
        "LWTime": "2013-03-09 16:40:56.406248"
    }, 
<snip>
    {
        "Title": "Services", 
        "Name": "AppMgmt", 
        "Value1": 2, 
        "Value2": "%SystemRoot%\\system32\\svchost.exe -k netsvcs", 
        "Value3": "Application Management", 
        "Value4": 32, 
        "Value5": "c:\\windows\\system32\\secur16.dll", 
        "LWTime": "2014-02-01 11:31:41.965500"
    }
<snip>
]

What? That looks confusing... How can I parse this? I'm not a coder... I'm not either, but it's easy...

import json
print ("\n" + ("=" * 51) + "\nType 2 Auto-start Services\n" + ("=" * 51))
with open('services.json', 'r') as f:
	data = json.load(f)
	for t in data:
		if "Services" in t['Title']:
			if "2" in str(t['Value1']):
				print 'Name: %s\ImgPath: %s\nSrvDLL: %s\n' % (t['Name'], t['Value2'], t['Value5'])
		else:
			pass

===================================================
Type 2 Auto-start Services
===================================================
Name: AppMgmt
ImagePath: %SystemRoot%\system32\svchost.exe -k netsvcs
ServiceDLL: c:\windows\system32\secur16.dll

Name: AudioSrv
ImagePath: %SystemRoot%\System32\svchost.exe -k netsvcs
ServiceDLL: %SystemRoot%\System32\audiosrv.dll

Name: Browser
ImagePath: %SystemRoot%\system32\svchost.exe -k netsvcs
ServiceDLL: %SystemRoot%\System32\browser.dll

This makes things very simple. You can run all of your plugins against 100 systems, 
and then simply process the raw JSON data as you see fit.

So no more trying to read other people's output. It's simple.... 
Customize it yourself with 10 - 20 lines of code. I'll also post some of the ones that I find most useful.


