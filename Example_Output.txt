The output will be JSON. I'm updating the plugins now. Then we will further process the JSON output files to fit your needs.

I haven't finalized the tags (Title, Name, Value1, etc.) yet.

autoreg-parse.py -p services -sys SYSTEM

[
    {
        "Title": "Services", 
        "Name": "Abiosdsk", 
        "Value1": 4, 
        "Value2": "???", 
        "Value3": "???", 
        "Value4": 1, 
        "Value5": "???", 
        "LWTime": "2013-03-09 16:40:56.406248"
    }, 
<snip>
    {
        "Title": "Services", 
        "Name": "AppMgmt", 
        "Value1": 2, 
        "Value2": "%SystemRoot%\\system32\\svchost.exe -k netsvcs", 
        "Value3": "Application Management", 
        "Value4": 32, 
        "Value5": "c:\\windows\\system32\\secur16.dll", 
        "LWTime": "2014-02-01 11:31:41.965500"
    }
<snip>
]

What? That looks confusing... How can I parse this? I'm not a coder... I'm not either, but it's easy...

import json
print ("\n" + ("=" * 51) + "\nType 2 Auto-start Services\n" + ("=" * 51))
with open('services.json', 'r') as f:
	data = json.load(f)
	for t in data:
		if "Services" in t['Title']:
			if "2" in str(t['Value1']):
				print 'Name: %s\ImgPath: %s\nSrvDLL: %s\n' % (t['Name'], t['Value2'], t['Value5'])
		else:
			pass

===================================================
Type 2 Auto-start Services
===================================================
Name: AppMgmt
ImgPath: %SystemRoot%\system32\svchost.exe -k netsvcs
SrvDLL: c:\windows\system32\secur16.dll

Name: AudioSrv
ImgPath: %SystemRoot%\System32\svchost.exe -k netsvcs
SrvDLL: %SystemRoot%\System32\audiosrv.dll

Name: Browser
ImgPath: %SystemRoot%\system32\svchost.exe -k netsvcs
SrvDLL: %SystemRoot%\System32\browser.dll

Name: BthServ
ImgPath: %SystemRoot%\system32\svchost.exe -k bthsvcs
SrvDLL: %SystemRoot%\System32\bthserv.dll

This makes things very simple. You can run all of your plugins against 100 systems, 
and then simply process the raw JSON data as you see fit.

So no more trying to read other people's output. It's simple.... 
Customize it yourself with 10 - 20 lines of code. I'll also post some of the ones that I find most useful.

WHAT???? You don't like JSON output, or the example I gave you? You're stuck in your ways and want CSV?

#Reference http://stackoverflow.com/questions/1871524/convert-from-json-to-csv-using-python

import csv, json, sys
json_input_file = open(sys.argv[1])
data = json.load(json_input_file)
json_input_file.close()
output = csv.writer(sys.stdout)
output.writerow(data[0].keys())
for jdata in data:
	output.writerow(jdata.values())
	
python json2csv.py services.json > mehmeh.csv

sysaudio,Services,2014-02-01 11:29:30.500000,???,1,Microsoft Kernel System Audio Device,system32\drivers\sysaudio.sys,3
SysmonLog,Services,2013-03-09 16:40:56.468750,???,16,Performance Logs and Alerts,%SystemRoot%\system32\smlogsvc.exe,3
TapiSrv,Services,2014-02-01 11:29:07.843750,%SystemRoot%\System32\tapisrv.dll,32,Telephony,%SystemRoot%\System32\svchost.exe -k netsvcs,3
Tcpip,Services,2014-02-01 11:29:07.843750,???,1,TCP/IP Protocol Driver,system32\DRIVERS\tcpip.sys,1
